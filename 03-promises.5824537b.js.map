{"mappings":"qhBAAA,IAYuBA,EAAUC,EAZjCC,EAAAC,EAAA,UAYuBH,EAcT,EAdmBC,EAchB,KAbR,IAAIG,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEL,E,MAAUC,IAEpBK,EAAO,C,SAAEN,E,MAAUC,GAAQ,GAE5BA,EAAM,KAKVU,MAAK,EAACX,SAAEA,EAAQC,MAAEA,MACjBW,EAAAV,GAASW,OAAOC,QAAQ,qBAAqBd,IAAY,eAAeC,MAAU,IAEnFc,OAAM,EAACf,SAAEA,EAAQC,MAAEA,MAClBW,EAAAV,GAASW,OAAOG,QAAQ,oBAAoBhB,IAAY,eAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`Fulfilled promise ${position}`, `Resolved in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`Rejected promise ${position}`, `Rejected in ${delay}ms`);\n  });"],"names":["position","delay","$7Y9D8","parcelRequire","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.5824537b.js.map"}